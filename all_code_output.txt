
# --------------------
# File: about.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>About - Gradiorum</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="about">
            <h1>About Gradiorum</h1>
            <p>Welcome to Gradiorum, the leading platform for innovation and technological advancement. Gradiorum showcases cutting-edge projects, creative endeavors, and a collection of works that span various fields of technology and art.</p>
            <h2>Our Mission</h2>
            <p>At Gradiorum, our mission is to pioneer future-facing technological solutions, foster collaboration, and share knowledge with the world. We are rooted in innovation, aiming to be at the forefront of AI and tech development.</p>
            <h2>Timeline</h2>
            <div class="timeline">
                <div class="timeline-item left">
                    <div class="timeline-content">
                        <h3>October 13, 2024</h3>
                        <p>Official name change from "FallingPlanet" to "Gradiorum".</p>
                    </div>
                </div>
                <div class="timeline-item right">
                    <div class="timeline-content">
                        <h3>October 20, 2024</h3>
                        <p>Completion of the toolkit rewrite:
                            <ul>
                                <li><strong>Via</strong> (formerly Orbit): A lightweight modular framework for AI integration.</li>
                                <li><strong>Ascendus</strong> (formerly Quasar): An advanced AI toolkit for scaling automation and efficiency.</li>
                                <li><strong>Motus</strong>: A new reinforcement learning library for dynamic AI solutions.</li>
                            </ul>
                        </p>
                    </div>
                </div>
                <!-- Add more timeline items as needed -->
            </div>
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: blog.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Blog - Gradiorum</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/blog.js"></script>
</head>
<body>
    <header>
        <!-- ... updated navigation ... -->
    </header>
    <main>
        <h1>Blog</h1>
        <div id="blog-posts" class="blog-cards"></div>
        <button id="new-post-btn" style="display: none;">New Post</button>
    </main>
    <!-- ... updated footer ... -->
</body>
</html>


# --------------------
# File: callback.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>GitHub OAuth Callback</title>
    <script src="js/callback.js"></script>
</head>
<body>
    <p>Processing...</p>
</body>
</html>


# --------------------
# File: contact.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Contact - Gradiorum</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="contact">
            <h1>Contact Us</h1>
            <p>If you have any questions, proposals for collaboration, or need further information, please don't hesitate to contact us:</p>
            <ul>
                <li>Email: <a href="mailto:gradiorumcorp@gmail.com">gradiorumcorp@gmail.com</a></li>
            </ul>
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: export.py
# --------------------

import os

def export_code(output_filename='all_code_output.txt'):
    # Define the file extensions you want to include
    included_extensions = {'.js', '.html', '.css', '.json', '.py', '.md'}

    # Define directories to exclude
    excluded_dirs = {'venv', '__pycache__', 'node_modules', 'browser-extension/data'}

    code_files = []
    for root, dirs, files in os.walk('.'):
        # Modify dirs in-place to skip excluded directories
        dirs[:] = [d for d in dirs if d not in excluded_dirs]
        
        for file in files:
            file_ext = os.path.splitext(file)[1].lower()
            if file_ext in included_extensions:
                code_files.append(os.path.join(root, file))

    all_code = ''
    for file_path in code_files:
        # Normalize the file path for better readability
        normalized_path = os.path.relpath(file_path, '.')
        all_code += f"\n# {'-'*20}\n# File: {normalized_path}\n# {'-'*20}\n\n"
        
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                code = f.read()
                all_code += code + "\n"
        except (UnicodeDecodeError, PermissionError) as e:
            all_code += f"// Could not read file: {e}\n"

    with open(output_filename, 'w', encoding='utf-8') as f:
        f.write(all_code)

    print(f"All code has been exported to {output_filename}")

if __name__ == "__main__":
    export_code()


# --------------------
# File: footer.html
# --------------------

<footer>
    <p>&copy; 2024 Gradiorum. All rights reserved.</p>
    <div class="social-links">
        <a href="https://twitter.com/Gradiorum">Twitter</a>
        <a href="https://linkedin.com/company/Gradiorum">LinkedIn</a>
        <a href="https://youtube.com/channel/Gradiorum">YouTube</a>
    </div>
    <div class="newsletter">
        <p>Join our Mailing List for Updates</p>
        <form id="newsletter-form">
            <input type="email" name="email" placeholder="Your email">
            <button type="submit">Subscribe</button>
        </form>
    </div>
</footer>


# --------------------
# File: header.html
# --------------------

<header>
    <div class="header-content">
        <img src="assets/logo.png" alt="Gradiorum Logo" class="logo">
        <nav>
            <ul>
                <li><a href="index.html">Home</a></li>
                <li><a href="about.html">About</a></li>
                <li><a href="members.html">Members</a></li>
                <li><a href="projects.html">Projects</a></li>
                <li><a href="blog.html">Blog</a></li>
                <li><a href="videos.html">Videos</a></li>
                <li><a href="papers.html">Papers</a></li>
                <li><a href="contact.html">Contact</a></li>
            </ul>
            <button class="menu-toggle">&#9776;</button>
        </nav>
        <button class="theme-toggle">Toggle Theme</button>
    </div>
</header>


# --------------------
# File: index.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Gradiorum - Home</title>
    <link rel="stylesheet" href="css/style.css">
    <!-- Include common.js before the closing head tag -->
    <script src="js/common.js"></script>
</head>
<body data-theme="dark">
    <!-- Include the header using data-include -->
    <div data-include="header.html"></div>
    <main>
        <section class="hero" style="background: linear-gradient(135deg, #4b6cb7, #182848);">
            <h1>Welcome to Gradiorum</h1>
            <p>The Frontier of Innovation and Technology</p>
            <button onclick="location.href='about.html'">Learn More</button>
        </section>
        <section class="featured">
            <h2>Featured Projects</h2>
            <div class="projects">
                <article>
                    <img src="assets/via.png" alt="Via Toolkit">
                    <h3>Via</h3>
                    <p>A lightweight modular framework for AI integration.</p>
                    <a href="via.html">Read More</a>
                </article>
                <article>
                    <img src="assets/ascendus.png" alt="Ascendus Toolkit">
                    <h3>Ascendus</h3>
                    <p>An advanced AI toolkit for scaling automation and efficiency.</p>
                    <a href="ascendus.html">Read More</a>
                </article>
            </div>
        </section>
        <section class="news">
            <h2>Latest News</h2>
            <div class="news-articles">
                <!-- Dynamic content loaded via JavaScript -->
            </div>
        </section>
    </main>
    <!-- Include the footer using data-include -->
    <div data-include="footer.html"></div>
    <script src="js/main.js"></script>
</body>
</html>


# --------------------
# File: login.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>Login - Gradiorum</title>
    <script src="js/login.js"></script>
</head>
<body>
    <main>
        <h1>Admin Login</h1>
        <button onclick="authenticateWithGitHub()">Login with GitHub</button>
    </main>
</body>
</html>


# --------------------
# File: members.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Members - Gradiorum</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="members">
            <h1>Members</h1>
            <div class="member-profile">
                <img src="assets/william-stigall.jpg" alt="William A. Stigall">
                <h2>William A. Stigall</h2>
                <p>I am a 22-year-old with a lifelong interest in Artificial Intelligence and Intelligent Agents. I believe that everyone deserves an assistant reminiscent of Halo's Cortana, and I am dedicated to bringing that vision to reality. I enjoy applying AI solutions wherever possible, focusing on developing intelligent systems that enhance everyday life.</p>
                <p>I graduated with a Bachelor of Science in Computer Science with a concentration in AI and a minor in Data Science from Kennesaw State University. I am currently attending the Georgia Institute of Technology for a Master's of Science in Computer Science, specializing in Machine Learning.</p>
            </div>
            <!-- Future members can be added here -->
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: new-post.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>New Post - Gradiorum</title>
    <script src="js/new-post.js"></script>
</head>
<body>
    <main>
        <h1>New Blog Post</h1>
        <input type="text" id="post-title" placeholder="Title">
        <textarea id="post-content" placeholder="Write your post in Markdown"></textarea>
        <button onclick="submitPost()">Publish</button>
    </main>
</body>
</html>


# --------------------
# File: papers.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gradiorum - Papers</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <!-- Include the header -->
    <div data-include="header.html"></div>
    <main>
        <h1>Our Papers</h1>
        <section class="papers">
            <article>
                <h2>Advancements in AI Integration</h2>
                <p>An in-depth analysis of modern AI integration techniques using the Via framework.</p>
                <a href="https://example.com/advancements-in-ai-integration.pdf" target="_blank">Read Paper</a>
            </article>
            <article>
                <h2>Scaling Automation with Ascendus</h2>
                <p>A comprehensive study on scaling automation and efficiency in AI systems.</p>
                <a href="https://example.com/scaling-automation-with-ascendus.pdf" target="_blank">Read Paper</a>
            </article>
            <!-- More papers can be listed here -->
        </section>
    </main>
    <!-- Include the footer -->
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: projects.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Projects - Gradiorum</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="projects">
            <h1>Projects</h1>
            <div id="projects-container"></div>
        </section>
    </main>
    <div data-include="footer.html"></div>
    <!-- Include Marked.js for Markdown parsing -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="js/projects.js"></script>
</body>
</html>


# --------------------
# File: README.md
# --------------------

# Gradiorum

Welcome to the official repository of **Gradiorum**, a platform dedicated to showcasing innovative projects at the frontier of technology and creativity. Gradiorum serves as a digital space not only to display our accomplishments but also to foster collaboration and free expression within the tech community.

## About Gradiorum

Gradiorum represents the evolution of our commitment to pushing the boundaries of innovation. We focus on sharing creative and technical projects with the world, reflecting our dedication to future-facing technological leadership.

## Contribution

Gradiorum welcomes contributions from everyone. Whether you're looking to contribute to existing projects or want to share your own insights through blog posts, here’s how you can get involved:

### Blog Contributions

Want to share your thoughts or showcase your projects? You can contribute to our blog by submitting a DOCX or Markdown file to the `posts` directory of this repository. Here's how:

1. Fork the repository.
2. Add your blog post in DOCX or Markdown format to the `posts` directory.
3. Create a pull request.

We encourage contributions that foster innovation, share insightful analyses, and reflect creative thinking.

### Code Contributions

To contribute to the project code:

1. Fork the repository.
2. Create your feature branch: `git checkout -b my-new-feature`
3. Commit your changes: `git commit -am 'Add some feature'`
4. Push to the branch: `git push origin my-new-feature`
5. Submit a pull request.

## Contact

If you have any questions, proposals for collaboration, or need further information, please don't hesitate to contact us:

- **Email**: gradiorumcorp@gmail.com

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.

## Acknowledgements

- Thanks to all contributors who help make this project a reality.
- Special thanks to those who engage with us to share innovative ideas and push the boundaries of technology.


# --------------------
# File: videos.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Gradiorum - Videos</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <!-- Include the header -->
    <div data-include="header.html"></div>
    <main>
        <h1>Visit Our YouTube Channel</h1>
        <p>For more videos, tutorials, and live sessions, visit our YouTube channel.</p>
        <a href="https://www.youtube.com/channel/Gradiorum" target="_blank" class="btn">Go to YouTube Channel</a>
    </main>
    <!-- Include the footer -->
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: css\style.css
# --------------------

/* Updated styles */

/* Gradient-based theme */
body {
    font-family: 'Inter', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #121212;
    color: #ffffff;
    transition: background-color 0.3s, color 0.3s;
}

body[data-theme="light"] {
    background-color: #ffffff;
    color: #000000;
}

/* Header and navigation */
header {
    background: linear-gradient(135deg, #4b6cb7, #182848);
    padding: 20px;
}

.header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.logo {
    height: 50px;
}

nav ul {
    list-style-type: none;
    display: flex;
    gap: 15px;
}

nav ul li a {
    color: #ffffff;
    text-decoration: none;
    font-weight: bold;
}

.menu-toggle {
    display: none;
}

.theme-toggle {
    background: none;
    border: none;
    color: #ffffff;
    cursor: pointer;
    font-size: 16px;
}

/* Responsive navigation */
@media (max-width: 768px) {
    nav ul {
        display: none;
        flex-direction: column;
    }

    nav ul.active {
        display: flex;
    }

    .menu-toggle {
        display: block;
        background: none;
        border: none;
        color: #ffffff;
        font-size: 24px;
        cursor: pointer;
    }
}

/* Hero section */
.hero {
    text-align: center;
    padding: 100px 20px;
    color: #ffffff;
}

.hero h1 {
    font-size: 48px;
    margin-bottom: 20px;
}

.hero p {
    font-size: 24px;
    margin-bottom: 40px;
}

.hero button {
    padding: 10px 20px;
    font-size: 18px;
    cursor: pointer;
}

/* Featured projects */
.featured {
    padding: 60px 20px;
    background-color: #1e1e1e;
}

.featured h2 {
    text-align: center;
    margin-bottom: 40px;
}

.projects {
    display: flex;
    justify-content: center;
    gap: 40px;
}

.projects article {
    background-color: #2e2e2e;
    padding: 20px;
    border-radius: 8px;
    width: 300px;
    text-align: center;
    transition: transform 0.3s;
}

.projects article:hover {
    transform: scale(1.05);
}

.projects img {
    width: 100%;
    border-radius: 8px;
}

.projects h3 {
    margin-top: 20px;
}

.projects p {
    margin: 20px 0;
}

.projects a {
    color: #4b6cb7;
    text-decoration: none;
    font-weight: bold;
}

/* Footer */
footer {
    background-color: #1e1e1e;
    color: #ffffff;
    padding: 40px 20px;
    text-align: center;
}

.social-links a {
    color: #ffffff;
    margin: 0 10px;
    text-decoration: none;
}

.newsletter {
    margin-top: 20px;
}

.newsletter input {
    padding: 10px;
    width: 200px;
}

.newsletter button {
    padding: 10px 20px;
    cursor: pointer;
}

/* Theme transition */
[data-theme="light"] .hero,
[data-theme="light"] footer,
[data-theme="light"] .featured {
    background-color: #f9f9f9;
    color: #000000;
}

[data-theme="light"] nav ul li a,
[data-theme="light"] .theme-toggle,
[data-theme="light"] .menu-toggle {
    color: #000000;
}

/* Timeline styling remains the same as before */


# --------------------
# File: js\blog.js
# --------------------

document.addEventListener('DOMContentLoaded', () => {
    const newPostBtn = document.getElementById('new-post-btn');

    // Check if the user is authenticated
    if (sessionStorage.getItem('githubToken')) {
        newPostBtn.style.display = 'block';
        newPostBtn.addEventListener('click', () => {
            window.location.href = 'new-post.html';
        });
    }

    fetchPosts();
});

async function fetchPosts() {
    const response = await fetch('https://api.github.com/repos/YourUsername/Gradiorum/contents/posts');
    const posts = await response.json();

    const postsContainer = document.getElementById('blog-posts');
    postsContainer.classList.add('post-grid');
    posts.forEach(async (post) => {
        if (post.name.endsWith('.md')) {
            const postContent = await fetch(post.download_url).then(res => res.text());
            const postElement = document.createElement('div');
            postElement.classList.add('post-card');
            postElement.innerHTML = marked(postContent); // Use a Markdown parser like Marked.js
            postsContainer.appendChild(postElement);
        }
    });
}


# --------------------
# File: js\callback.js
# --------------------

(async function() {
    const code = new URLSearchParams(window.location.search).get('code');
    const clientId = 'YOUR_GITHUB_APP_CLIENT_ID';
    const clientSecret = 'YOUR_GITHUB_APP_CLIENT_SECRET';

    // Exchange code for access token via a proxy server or serverless function
    const response = await fetch('https://your-proxy-server.com/get-token', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ clientId, clientSecret, code }),
    });

    const data = await response.json();
    if (data.access_token) {
        sessionStorage.setItem('githubToken', data.access_token);
        window.location.href = 'blog.html';
    } else {
        alert('Authentication failed.');
        window.location.href = 'login.html';
    }
})();


# --------------------
# File: js\common.js
# --------------------

function includeHTML() {
    const elements = document.querySelectorAll('[data-include]');
    elements.forEach(async (el) => {
        const file = el.getAttribute('data-include');
        const response = await fetch(file);
        if (response.ok) {
            el.innerHTML = await response.text();
        } else {
            console.error(`Failed to load ${file}: ${response.statusText}`);
        }
    });
}

document.addEventListener('DOMContentLoaded', includeHTML);


# --------------------
# File: js\login.js
# --------------------

function authenticateWithGitHub() {
    const clientId = 'YOUR_GITHUB_APP_CLIENT_ID';
    const redirectUri = 'https://yourdomain.com/callback.html';
    const scope = 'repo';

    const authUrl = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}`;

    window.location.href = authUrl;
}


# --------------------
# File: js\Main.js
# --------------------

import { setupThemeToggle } from './modules/themeToggle.js';
import { setupResponsiveNav } from './modules/responsiveNav.js';
import { setupFormHandlers } from './modules/formHandlers.js';
import { setupLazyLoading } from './modules/lazyLoading.js';
import { setupImageGallery } from './modules/imageGallery.js';

document.addEventListener('DOMContentLoaded', () => {
    setupThemeToggle();
    setupResponsiveNav();
    setupFormHandlers();
    setupLazyLoading();
    setupImageGallery();
});


# --------------------
# File: js\new-post.js
# --------------------

async function submitPost() {
    const title = document.getElementById('post-title').value;
    const content = document.getElementById('post-content').value;
    const token = sessionStorage.getItem('githubToken');

    if (!title || !content) {
        alert('Please fill out all fields.');
        return;
    }

    const filePath = `posts/${title.replace(/\s+/g, '-').toLowerCase()}.md`;
    const message = `Add new post: ${title}`;
    const sha = await getFileSha(filePath, token);

    const data = {
        message: message,
        content: btoa(unescape(encodeURIComponent(content))),
        sha: sha || undefined,
    };

    fetch(`https://api.github.com/repos/YourUsername/Gradiorum/contents/${filePath}`, {
        method: 'PUT',
        headers: {
            'Authorization': `token ${token}`,
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
    .then(response => {
        if (response.ok) {
            alert('Post published successfully!');
            window.location.href = 'blog.html';
        } else {
            alert('Error publishing post.');
        }
    });
}

async function getFileSha(path, token) {
    const response = await fetch(`https://api.github.com/repos/YourUsername/Gradiorum/contents/${path}`, {
        headers: { 'Authorization': `token ${token}` },
    });

    if (response.ok) {
        const data = await response.json();
        return data.sha;
    }

    return null;
}


# --------------------
# File: js\projects.js
# --------------------

document.addEventListener('DOMContentLoaded', () => {
    fetchProjects();
});

async function fetchProjects() {
    const orgName = 'Gradiorum'; // Replace with your organization name
    const userName = 'WilliamStigall'; // Replace with your GitHub username
    const projectsContainer = document.getElementById('projects-container');

    // Fetch organization repositories
    const orgRepos = await fetchRepos(`https://api.github.com/orgs/${orgName}/repos`);
    // Fetch user repositories
    const userRepos = await fetchRepos(`https://api.github.com/users/${userName}/repos`);

    // Separate solo and organization projects
    const soloProjects = userRepos.filter(repo => repo.owner.login === userName && !repo.organization);
    const orgProjects = orgRepos;

    // Display organization projects
    const orgSection = document.createElement('section');
    orgSection.innerHTML = '<h2>Organization Projects</h2>';
    await displayRepos(orgProjects, orgSection);
    projectsContainer.appendChild(orgSection);

    // Display solo projects
    const soloSection = document.createElement('section');
    soloSection.innerHTML = '<h2>Solo Projects</h2>';
    await displayRepos(soloProjects, soloSection);
    projectsContainer.appendChild(soloSection);
}

async function fetchRepos(url) {
    let repos = [];
    try {
        const response = await fetch(url);
        if (response.ok) {
            repos = await response.json();
        } else {
            console.error('Failed to fetch repositories:', response.statusText);
        }
    } catch (error) {
        console.error('Error fetching repositories:', error);
    }
    return repos;
}

async function displayRepos(repos, container) {
    for (const repo of repos) {
        const repoDiv = document.createElement('div');
        repoDiv.className = 'repo';

        // Repository name
        const repoName = document.createElement('h3');
        repoName.textContent = repo.name;
        repoDiv.appendChild(repoName);

        // Fetch README.md content
        const readmeContent = await fetchReadme(repo);

        if (readmeContent) {
            const readmeDiv = document.createElement('div');
            readmeDiv.innerHTML = marked.parse(readmeContent);
            repoDiv.appendChild(readmeDiv);
        } else {
            const noReadme = document.createElement('p');
            noReadme.textContent = 'No README available.';
            repoDiv.appendChild(noReadme);
        }

        container.appendChild(repoDiv);
    }
}

async function fetchReadme(repo) {
    let readmeContent = null;
    try {
        const response = await fetch(`https://api.github.com/repos/${repo.full_name}/readme`, {
            headers: {
                'Accept': 'application/vnd.github.v3.raw' // Fetch raw content
            }
        });
        if (response.ok) {
            readmeContent = await response.text();
        } else {
            console.warn(`No README found for ${repo.full_name}`);
        }
    } catch (error) {
        console.error(`Error fetching README for ${repo.full_name}:`, error);
    }
    return readmeContent;
}


# --------------------
# File: js\modules\formHandlers.js
# --------------------

export function setupFormHandlers() {
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', event => {
            event.preventDefault();
            alert('Form submitted! Check console for data.');
            console.log(new FormData(form));
        });
    });
}


# --------------------
# File: js\modules\imageGallery.js
# --------------------

import { showModalWithImage } from './modal.js';

export function setupImageGallery() {
    const galleryImages = document.querySelectorAll('.gallery img');
    galleryImages.forEach(image => {
        image.addEventListener('click', () => {
            showModalWithImage(image.getAttribute('src'));
        });
    });
}


# --------------------
# File: js\modules\lazyLoading.js
# --------------------

export function setupLazyLoading() {
    const images = document.querySelectorAll('img[data-src]');
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.getAttribute('data-src');
                observer.unobserve(img);
            }
        });
    });

    images.forEach(image => {
        imageObserver.observe(image);
    });
}


# --------------------
# File: js\modules\model.js
# --------------------

export function showModalWithImage(src) {
    const modal = document.createElement('div');
    modal.className = 'image-modal';
    modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); display: flex; justify-content: center; align-items: center; z-index: 1000;';
    const img = new Image();
    img.src = src;
    img.style.cssText = 'max-height: 90%; max-width: 90%;';
    modal.appendChild(img);
    modal.addEventListener('click', () => {
        document.body.removeChild(modal);
    });
    document.body.appendChild(modal);
}


# --------------------
# File: js\modules\responsiveNav.js
# --------------------

export function setupResponsiveNav() {
    const menuToggle = document.querySelector('.menu-toggle');
    const nav = document.querySelector('nav ul');
    menuToggle.addEventListener('click', () => {
        nav.classList.toggle('active');
    });
}


# --------------------
# File: js\modules\themeToggle.js
# --------------------

export function setupThemeToggle() {
    const themeToggle = document.querySelector('.theme-toggle');
    const currentTheme = localStorage.getItem('theme') || 'light';
    document.body.setAttribute('data-theme', currentTheme);

    themeToggle.addEventListener('click', () => {
        const newTheme = document.body.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
        document.body.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
    });
}


# --------------------
# File: posts\README.md
# --------------------



