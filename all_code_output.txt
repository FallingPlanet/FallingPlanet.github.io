
# --------------------
# File: about.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>About - FallingPlanet</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="about">
            <h1>About FallingPlanet</h1>
            <p>Welcome to FallingPlanet, the personal portfolio and organizational platform for William A. Stigall. FallingPlanet showcases innovative projects, creative endeavors, and a collection of works that span various fields of technology and art.</p>
            <h2>Our Mission</h2>
            <p>At FallingPlanet, our mission is to push the boundaries of innovation, foster collaboration, and share knowledge with the world. Despite being a one-person operation, we believe in the power of ideas and the impact they can have.</p>
            <h2>Timeline</h2>
            <div class="timeline">
                <div class="timeline-item left">
                    <div class="timeline-content">
                        <h3>2022</h3>
                        <p>Founded FallingPlanet as a platform to showcase innovative projects.</p>
                    </div>
                </div>
                <div class="timeline-item right">
                    <div class="timeline-content">
                        <h3>2023</h3>
                        <p>Launched the first major project focusing on AI development, the FallingPlanet-toolkit.</p>
                    </div>
                </div>
                <!-- Add more timeline items as needed -->
            </div>
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: blog.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>Blog - FallingPlanet</title>
    <script src="js/blog.js"></script>
</head>
<body>
    <header>
        <!-- ... navigation ... -->
    </header>
    <main>
        <h1>Blog</h1>
        <div id="blog-posts"></div>
        <button id="new-post-btn" style="display: none;">New Post</button>
    </main>
    <!-- ... footer ... -->
</body>
</html>


# --------------------
# File: callback.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>GitHub OAuth Callback</title>
    <script src="js/callback.js"></script>
</head>
<body>
    <p>Processing...</p>
</body>
</html>


# --------------------
# File: contact.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Contact - FallingPlanet</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="contact">
            <h1>Contact Us</h1>
            <p>If you have any questions, proposals for collaboration, or need further information, please don't hesitate to contact us:</p>
            <ul>
                <li>Email: <a href="mailto:fallingplanetcorp@gmail.com">fallingplanetcorp@gmail.com</a></li>
            </ul>
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: export.py
# --------------------

import os

def export_code(output_filename='all_code_output.txt'):
    # Define the file extensions you want to include
    included_extensions = {'.js', '.html', '.css', '.json', '.py', '.md'}

    # Define directories to exclude
    excluded_dirs = {'venv', '__pycache__', 'node_modules', 'browser-extension/data'}

    code_files = []
    for root, dirs, files in os.walk('.'):
        # Modify dirs in-place to skip excluded directories
        dirs[:] = [d for d in dirs if d not in excluded_dirs]
        
        for file in files:
            file_ext = os.path.splitext(file)[1].lower()
            if file_ext in included_extensions:
                code_files.append(os.path.join(root, file))

    all_code = ''
    for file_path in code_files:
        # Normalize the file path for better readability
        normalized_path = os.path.relpath(file_path, '.')
        all_code += f"\n# {'-'*20}\n# File: {normalized_path}\n# {'-'*20}\n\n"
        
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                code = f.read()
                all_code += code + "\n"
        except (UnicodeDecodeError, PermissionError) as e:
            all_code += f"// Could not read file: {e}\n"

    with open(output_filename, 'w', encoding='utf-8') as f:
        f.write(all_code)

    print(f"All code has been exported to {output_filename}")

if __name__ == "__main__":
    export_code()


# --------------------
# File: footer.html
# --------------------

<footer>
    <p>&copy; 2024 FallingPlanet. All rights reserved.</p>
    <div class="social-links">
        <a href="https://twitter.com/FallingPlanet">Twitter</a>
        <a href="https://facebook.com/FallingPlanet">Facebook</a>
        <a href="https://linkedin.com/company/FallingPlanet">LinkedIn</a>
    </div>
</footer>


# --------------------
# File: header.html
# --------------------

<header>
    <div class="header-content">
        <img src="assets/logo.png" alt="FallingPlanet Logo" class="logo">
        <nav>
            <ul>
                <li><a href="index.html">Home</a></li>
                <li><a href="about.html">About</a></li>
                <li><a href="members.html">Members</a></li>
                <li><a href="projects.html">Projects</a></li>
                <li><a href="blog.html">Blog</a></li>
                <li><a href="videos.html">Videos</a></li>
                <li><a href="papers.html">Papers</a></li>
                <li><a href="contact.html">Contact</a></li>
            </ul>
        </nav>
        <button class="theme-toggle">Toggle Theme</button>
    </div>
</header>


# --------------------
# File: index.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>FallingPlanet - Home</title>
    <link rel="stylesheet" href="css/style.css">
    <!-- Include common.js before the closing head tag -->
    <script src="js/common.js"></script>
</head>
<body>
    <!-- Include the header using data-include -->
    <div data-include="header.html"></div>
    <main>
        <section class="hero">
            <h1>Welcome to FallingPlanet</h1>
            <p>Explore the frontier of technology and innovation with us.</p>
            <button onclick="location.href='about.html'">Learn More</button>
        </section>
        <section class="featured">
            <h2>Featured Projects</h2>
            <div class="projects">
                <article>
                    <img src="assets/project1.jpg" alt="Project 1">
                    <h3>Project 1 Title</h3>
                    <p>Description of what Project 1 is about. A brief overview.</p>
                    <a href="project1.html">Read More</a>
                </article>
                <article>
                    <img src="assets/project2.jpg" alt="Project 2">
                    <h3>Project 2 Title</h3>
                    <p>Description of what Project 2 is about. A brief overview.</p>
                    <a href="project2.html">Read More</a>
                </article>
            </div>
        </section>
        <section class="news">
            <h2>Latest News</h2>
            <div class="news-articles">
                <article>
                    <img src="assets/news1.jpg" alt="News 1">
                    <h3>News Headline 1</h3>
                    <p>Summary of the news article. What is the main focus?</p>
                    <a href="news1.html">Read More</a>
                </article>
                <article>
                    <img src="assets/news2.jpg" alt="News 2">
                    <h3>News Headline 2</h3>
                    <p>Summary of the news article. What is the main focus?</p>
                    <a href="news2.html">Read More</a>
                </article>
            </div>
        </section>
    </main>
    <!-- Include the footer using data-include -->
    <div data-include="footer.html"></div>
    <script src="js/main.js"></script>
</body>
</html>


# --------------------
# File: login.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>Login - FallingPlanet</title>
    <script src="js/login.js"></script>
</head>
<body>
    <main>
        <h1>Admin Login</h1>
        <button onclick="authenticateWithGitHub()">Login with GitHub</button>
    </main>
</body>
</html>


# --------------------
# File: members.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Members - FallingPlanet</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="members">
            <h1>Members</h1>
            <div class="member-profile">
                <img src="assets/william-stigall.jpg" alt="William A. Stigall">
                <h2>William A. Stigall</h2>
                <p>Founder and sole member of FallingPlanet. William is a passionate developer and innovator, dedicated to pushing the limits of technology and creativity.</p>
            </div>
            <!-- Future members can be added here -->
        </section>
    </main>
    <div data-include="footer.html"></div>
</body>
</html>


# --------------------
# File: new-post.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... head elements ... -->
    <title>New Post - FallingPlanet</title>
    <script src="js/new-post.js"></script>
</head>
<body>
    <main>
        <h1>New Blog Post</h1>
        <input type="text" id="post-title" placeholder="Title">
        <textarea id="post-content" placeholder="Write your post in Markdown"></textarea>
        <button onclick="submitPost()">Publish</button>
    </main>
</body>
</html>


# --------------------
# File: papers.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/style.css">
    <title>FallingPlanet - Papers</title>
</head>
<body>
    <header>
        <img src="assets/logo.png" alt="FallingPlanet Logo">
        <nav>
            <ul>
                <li><a href="index.html">Home</a></li>
                <li><a href="blog.html">Blog</a></li>
                <li><a href="videos.html">Videos</a></li>
                <li><a href="papers.html">Papers</a></li>
            </ul>
        </nav>
    </header>
    <main>
        <h1>Our Papers</h1>
        <section class="papers">
            <article>
                <h2>Paper Title 1</h2>
                <p>Abstract or summary of the paper.</p>
                <a href="https://example.com/paper1.pdf" target="_blank">Read Paper</a>
            </article>
            <article>
                <h2>Paper Title 2</h2>
                <p>Abstract or summary of the paper.</p>
                <a href="https://example.com/paper2.pdf" target="_blank">Read Paper</a>
            </article>
            <!-- More papers can be listed here -->
        </section>
    </main>
    <footer>
        <p>&copy; 2024 FallingPlanet. All rights reserved.</p>
    </footer>
</body>
</html>


# --------------------
# File: projects.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Projects - FallingPlanet</title>
    <link rel="stylesheet" href="css/style.css">
    <script src="js/common.js"></script>
</head>
<body>
    <div data-include="header.html"></div>
    <main>
        <section class="projects">
            <h1>Projects</h1>
            <div id="projects-container"></div>
        </section>
    </main>
    <div data-include="footer.html"></div>
    <!-- Include Marked.js for Markdown parsing -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="js/projects.js"></script>
</body>
</html>


# --------------------
# File: README.md
# --------------------

# FallingPlanet

Welcome to the official repository of FallingPlanet, a platform dedicated to showcasing the innovative projects of William A. Stigall. FallingPlanet serves as a digital space not only to display personal accomplishments but also to foster collaboration and free expression within the tech community.

## About FallingPlanet

FallingPlanet is currently a personal project and has not been formalized as an LLC. It represents an abstraction of William A. Stigall's work, focusing on sharing creative and technical projects with the world. This repository and its associated website are open source, reflecting a commitment to open collaboration.

## Contribution

FallingPlanet welcomes contributions from everyone. Whether you're looking to contribute to the existing projects or want to share your own insights through blog posts, here’s how you can get involved:

### Blog Contributions

Want to share your thoughts or showcase your projects? You can contribute to our blog by submitting a DOCX file to the `posts` directory of this repository. Here's how:

1. Fork the repository.
2. Add your blog post in DOCX format to the `posts` directory.
3. Create a pull request.

We encourage contributions that foster innovation, share insightful analyses, and reflect creative thinking.

### Code Contributions

To contribute to the project code:

1. Fork the repository.
2. Create your feature branch: `git checkout -b my-new-feature`
3. Commit your changes: `git commit -am 'Add some feature'`
4. Push to the branch: `git push origin my-new-feature`
5. Submit a pull request.

## Contact

If you have any questions, proposals for collaboration, or need further information, please don't hesitate to contact us:

- **Email**: fallingplanetcorp@gmail.com

## License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.

## Acknowledgements

- Thanks to all contributors who help make this project a reality.
- Special thanks to those who engage with us to share innovative ideas and push the boundaries of technology.



# --------------------
# File: videos.html
# --------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/style.css">
    <title>FallingPlanet - Videos</title>
</head>
<body>
    <header>
        <img src="assets/logo.png" alt="FallingPlanet Logo">
        <nav>
            <ul>
                <li><a href="index.html">Home</a></li>
                <li><a href="blog.html">Blog</a></li>
                <li><a href="videos.html">Videos</a></li>
                <li><a href="papers.html">Papers</a></li>
            </ul>
        </nav>
    </header>
    <main>
        <h1>Visit Our YouTube Channel</h1>
        <p>For more videos, tutorials, and live sessions, visit our YouTube channel.</p>
        <a href="https://www.youtube.com/user/FallingPlanet" target="_blank" class="btn">Go to YouTube Channel</a>
    </main>
    <footer>
        <p>&copy; 2024 FallingPlanet. All rights reserved.</p>
    </footer>
</body>
</html>


# --------------------
# File: css\style.css
# --------------------

/* Existing styles */

/* Timeline styling */
.timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
}

.timeline::after {
    content: '';
    position: absolute;
    width: 6px;
    background-color: #3498db;
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
}

.timeline-item {
    padding: 10px 40px;
    position: relative;
    background-color: inherit;
    width: 50%;
}

.timeline-item.left {
    left: 0;
}

.timeline-item.right {
    left: 50%;
}

.timeline-item::after {
    content: ' ';
    position: absolute;
    width: 25px;
    height: 25px;
    right: -17px;
    background-color: #3498db;
    border: 4px solid #fff;
    top: 15px;
    border-radius: 50%;
    z-index: 1;
}

.timeline-item.right::after {
    left: -17px;
}

.timeline-content {
    padding: 20px;
    background-color: inherit;
    position: relative;
    border-radius: 6px;
}

.timeline-item.left .timeline-content {
    text-align: right;
}

.timeline-item.right .timeline-content {
    text-align: left;
}

/* Responsive */
@media screen and (max-width: 600px) {
    .timeline::after {
        left: 31px;
    }
    .timeline-item {
        width: 100%;
        left: 0;
    }
    .timeline-item.right {
        left: 0%;
    }
    .timeline-item::after {
        left: 15px;
    }
    .timeline-item.right::after {
        left: 15px;
    }
}


# --------------------
# File: js\blog.js
# --------------------

document.addEventListener('DOMContentLoaded', () => {
    const newPostBtn = document.getElementById('new-post-btn');

    // Check if the user is authenticated
    if (sessionStorage.getItem('githubToken')) {
        newPostBtn.style.display = 'block';
        newPostBtn.addEventListener('click', () => {
            window.location.href = 'new-post.html';
        });
    }

    fetchPosts();
});

async function fetchPosts() {
    const response = await fetch('https://api.github.com/repos/YourUsername/FallingPlanet/contents/posts');
    const posts = await response.json();

    const postsContainer = document.getElementById('blog-posts');
    posts.forEach(async (post) => {
        if (post.name.endsWith('.md')) {
            const postContent = await fetch(post.download_url).then(res => res.text());
            const postElement = document.createElement('div');
            postElement.innerHTML = marked(postContent); // Use a Markdown parser like Marked.js
            postsContainer.appendChild(postElement);
        }
    });
}


# --------------------
# File: js\callback.js
# --------------------

(async function() {
    const code = new URLSearchParams(window.location.search).get('code');
    const clientId = 'YOUR_GITHUB_APP_CLIENT_ID';
    const clientSecret = 'YOUR_GITHUB_APP_CLIENT_SECRET';

    // Exchange code for access token via a proxy server or serverless function
    const response = await fetch('https://your-proxy-server.com/get-token', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ clientId, clientSecret, code }),
    });

    const data = await response.json();
    if (data.access_token) {
        sessionStorage.setItem('githubToken', data.access_token);
        window.location.href = 'blog.html';
    } else {
        alert('Authentication failed.');
        window.location.href = 'login.html';
    }
})();


# --------------------
# File: js\common.js
# --------------------

function includeHTML() {
    const elements = document.querySelectorAll('[data-include]');
    elements.forEach(async (el) => {
        const file = el.getAttribute('data-include');
        const response = await fetch(file);
        if (response.ok) {
            el.innerHTML = await response.text();
        } else {
            console.error(`Failed to load ${file}: ${response.statusText}`);
        }
    });
}

document.addEventListener('DOMContentLoaded', includeHTML);


# --------------------
# File: js\login.js
# --------------------

function authenticateWithGitHub() {
    const clientId = 'YOUR_GITHUB_APP_CLIENT_ID';
    const redirectUri = 'https://yourdomain.com/callback.html';
    const scope = 'repo';

    const authUrl = `https://github.com/login/oauth/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}`;

    window.location.href = authUrl;
}


# --------------------
# File: js\Main.js
# --------------------

import { setupThemeToggle } from './modules/themeToggle.js';
import { setupResponsiveNav } from './modules/responsiveNav.js';
import { setupFormHandlers } from './modules/formHandlers.js';
import { setupLazyLoading } from './modules/lazyLoading.js';
import { setupImageGallery } from './modules/imageGallery.js';

document.addEventListener('DOMContentLoaded', () => {
    setupThemeToggle();
    setupResponsiveNav();
    setupFormHandlers();
    setupLazyLoading();
    setupImageGallery();
});


# --------------------
# File: js\new-post.js
# --------------------

async function submitPost() {
    const title = document.getElementById('post-title').value;
    const content = document.getElementById('post-content').value;
    const token = sessionStorage.getItem('githubToken');

    if (!title || !content) {
        alert('Please fill out all fields.');
        return;
    }

    const filePath = `posts/${title.replace(/\s+/g, '-').toLowerCase()}.md`;
    const message = `Add new post: ${title}`;
    const sha = await getFileSha(filePath, token);

    const data = {
        message: message,
        content: btoa(unescape(encodeURIComponent(content))),
        sha: sha || undefined,
    };

    fetch(`https://api.github.com/repos/YourUsername/FallingPlanet/contents/${filePath}`, {
        method: 'PUT',
        headers: {
            'Authorization': `token ${token}`,
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
    .then(response => {
        if (response.ok) {
            alert('Post published successfully!');
            window.location.href = 'blog.html';
        } else {
            alert('Error publishing post.');
        }
    });
}

async function getFileSha(path, token) {
    const response = await fetch(`https://api.github.com/repos/YourUsername/FallingPlanet/contents/${path}`, {
        headers: { 'Authorization': `token ${token}` },
    });

    if (response.ok) {
        const data = await response.json();
        return data.sha;
    }

    return null;
}


# --------------------
# File: js\projects.js
# --------------------

document.addEventListener('DOMContentLoaded', () => {
    fetchProjects();
});

async function fetchProjects() {
    const orgName = 'FallingPlanet'; // Replace with your organization name
    const userName = 'WilliamStigall'; // Replace with your GitHub username
    const projectsContainer = document.getElementById('projects-container');

    // Fetch organization repositories
    const orgRepos = await fetchRepos(`https://api.github.com/orgs/${orgName}/repos`);
    // Fetch user repositories
    const userRepos = await fetchRepos(`https://api.github.com/users/${userName}/repos`);

    // Separate solo and organization projects
    const soloProjects = userRepos.filter(repo => repo.owner.login === userName && !repo.organization);
    const orgProjects = orgRepos;

    // Display organization projects
    const orgSection = document.createElement('section');
    orgSection.innerHTML = '<h2>Organization Projects</h2>';
    await displayRepos(orgProjects, orgSection);
    projectsContainer.appendChild(orgSection);

    // Display solo projects
    const soloSection = document.createElement('section');
    soloSection.innerHTML = '<h2>Solo Projects</h2>';
    await displayRepos(soloProjects, soloSection);
    projectsContainer.appendChild(soloSection);
}

async function fetchRepos(url) {
    let repos = [];
    try {
        const response = await fetch(url);
        if (response.ok) {
            repos = await response.json();
        } else {
            console.error('Failed to fetch repositories:', response.statusText);
        }
    } catch (error) {
        console.error('Error fetching repositories:', error);
    }
    return repos;
}

async function displayRepos(repos, container) {
    for (const repo of repos) {
        const repoDiv = document.createElement('div');
        repoDiv.className = 'repo';

        // Repository name
        const repoName = document.createElement('h3');
        repoName.textContent = repo.name;
        repoDiv.appendChild(repoName);

        // Fetch README.md content
        const readmeContent = await fetchReadme(repo);

        if (readmeContent) {
            const readmeDiv = document.createElement('div');
            readmeDiv.innerHTML = marked.parse(readmeContent);
            repoDiv.appendChild(readmeDiv);
        } else {
            const noReadme = document.createElement('p');
            noReadme.textContent = 'No README available.';
            repoDiv.appendChild(noReadme);
        }

        container.appendChild(repoDiv);
    }
}

async function fetchReadme(repo) {
    let readmeContent = null;
    try {
        const response = await fetch(`https://api.github.com/repos/${repo.full_name}/readme`, {
            headers: {
                'Accept': 'application/vnd.github.v3.raw' // Fetch raw content
            }
        });
        if (response.ok) {
            readmeContent = await response.text();
        } else {
            console.warn(`No README found for ${repo.full_name}`);
        }
    } catch (error) {
        console.error(`Error fetching README for ${repo.full_name}:`, error);
    }
    return readmeContent;
}


# --------------------
# File: js\modules\formHandlers.js
# --------------------

export function setupFormHandlers() {
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', event => {
            event.preventDefault();
            alert('Form submitted! Check console for data.');
            console.log(new FormData(form));
        });
    });
}


# --------------------
# File: js\modules\imageGallery.js
# --------------------

import { showModalWithImage } from './modal.js';

export function setupImageGallery() {
    const galleryImages = document.querySelectorAll('.gallery img');
    galleryImages.forEach(image => {
        image.addEventListener('click', () => {
            showModalWithImage(image.getAttribute('src'));
        });
    });
}


# --------------------
# File: js\modules\lazyLoading.js
# --------------------

export function setupLazyLoading() {
    const images = document.querySelectorAll('img[data-src]');
    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.getAttribute('data-src');
                observer.unobserve(img);
            }
        });
    });

    images.forEach(image => {
        imageObserver.observe(image);
    });
}


# --------------------
# File: js\modules\model.js
# --------------------

export function showModalWithImage(src) {
    const modal = document.createElement('div');
    modal.className = 'image-modal';
    modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); display: flex; justify-content: center; align-items: center; z-index: 1000;';
    const img = new Image();
    img.src = src;
    img.style.cssText = 'max-height: 90%; max-width: 90%;';
    modal.appendChild(img);
    modal.addEventListener('click', () => {
        document.body.removeChild(modal);
    });
    document.body.appendChild(modal);
}


# --------------------
# File: js\modules\responsiveNav.js
# --------------------

export function setupResponsiveNav() {
    const menuToggle = document.querySelector('.menu-toggle');
    const nav = document.querySelector('nav ul');
    menuToggle.addEventListener('click', () => {
        nav.classList.toggle('active');
    });
}


# --------------------
# File: js\modules\themeToggle.js
# --------------------

export function setupThemeToggle() {
    const themeToggle = document.querySelector('.theme-toggle');
    const currentTheme = localStorage.getItem('theme') || 'light';
    document.body.setAttribute('data-theme', currentTheme);

    themeToggle.addEventListener('click', () => {
        const newTheme = document.body.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
        document.body.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
    });
}


# --------------------
# File: posts\README.md
# --------------------



